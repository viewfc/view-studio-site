import React, { useMemo, useState } from "react";
import { motion } from "framer-motion";
import { Check, Star, Sparkles, Smartphone, Paintbrush, Image as ImageIcon, Rocket, ArrowRight, Palette, Wand2, Users, MessageCircle, Calendar, Clock, GraduationCap } from "lucide-react";

const presets = {
  view: {
    brand: "VIEW STUDIO",
    tagline: "‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡πÅ‡∏ö‡∏ö‡∏™‡∏ô‡∏∏‡∏Å ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á",
    primary: "#D4AF37",
    secondary: "#1F2937",
    accent: "#F59E0B",
    darkBg: "#0B0F16",
    lightBg: "rgba(212,175,55,0.15)",
  },
  default: {
    brand: "‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ôAi‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô",
    tagline: "‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ AI ‡πÅ‡∏ö‡∏ö‡∏™‡∏ô‡∏∏‡∏Å ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢ ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á",
    primary: "#6D28D9",
    secondary: "#0EA5E9",
    accent: "#22C55E",
    darkBg: "#0B1020",
    lightBg: "#0ea5e920",
  },
};

const features = [
  { icon: Sparkles, title: "‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏™‡∏±‡πâ‡∏ô ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢", desc: "‡πÄ‡∏ô‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô" },
  { icon: Paintbrush, title: "‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏•‡∏á‡∏°‡∏∑‡∏≠‡∏ó‡∏≥", desc: "‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á ‡πÄ‡∏ä‡πà‡∏ô ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•/‡πÉ‡∏ä‡πâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡∏ï‡πå" },
  { icon: ImageIcon, title: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠ AI ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ", desc: "‡∏°‡∏µ‡∏û‡∏£‡πá‡∏≠‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Å‡πÉ‡∏´‡πâ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î" },
  { icon: Smartphone, title: "‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ó‡∏µ‡πà", desc: "‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ ‡πÅ‡∏ó‡πá‡∏ö‡πÄ‡∏•‡πá‡∏ï ‡πÅ‡∏•‡∏∞‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ" },
  { icon: Rocket, title: "‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û", desc: "Roadmap ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏à‡∏ô‡∏ñ‡∏∂‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ" },
  { icon: Wand2, title: "‡πÑ‡∏•‡∏ü‡πå Q&A + ‡∏ä‡∏∏‡∏°‡∏ä‡∏ô", desc: "‡∏ñ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå ‡∏°‡∏µ‡∏Ñ‡∏≠‡∏°‡∏°‡∏π‡∏ô‡∏¥‡∏ï‡∏µ‡πâ‡πÉ‡∏´‡πâ‡πÅ‡∏•‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô" },
];

const plans = [
  { name: "Starter", price: "‡∏ü‡∏£‡∏µ", highlight: false, features: ["‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô", "‡∏Ñ‡∏ß‡∏¥‡∏ã & ‡πÇ‡∏ô‡πâ‡∏ï", "‡πÄ‡∏Ç‡πâ‡∏≤‡∏ä‡∏∏‡∏°‡∏ä‡∏ô‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô"] },
  { name: "Pro", price: "‡∏ø490/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", highlight: true, features: ["‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏à‡∏£‡∏¥‡∏á & ‡πÅ‡∏ö‡∏ö‡∏ù‡∏∂‡∏Å‡∏´‡∏±‡∏î", "‡πÑ‡∏•‡∏ü‡πå Q&A ‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå"] },
  { name: "Business", price: "‡∏ø1,490/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô", highlight: false, features: ["‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡∏° 5 ‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á", "‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤", "‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏µ"] },
];

const steps = [
  { step: 1, title: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å", desc: "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1 ‡∏ô‡∏≤‡∏ó‡∏µ" },
  { step: 2, title: "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏≠‡∏£‡πå‡∏™/‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á", desc: "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ï‡∏≤‡∏°‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" },
  { step: 3, title: "‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå", desc: "‡∏ù‡∏∂‡∏Å‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏à‡∏£‡∏¥‡∏á + ‡∏£‡∏±‡∏ö‡∏ü‡∏µ‡∏î‡πÅ‡∏ö‡πá‡∏Å" },
];

const courses = [
  { title: "AI ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô", duration: "6 ‡∏ä‡∏°.", level: "Beginner", price: "‡∏ü‡∏£‡∏µ", desc: "‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏†‡∏≤‡∏û‡∏£‡∏ß‡∏° AI/LLM, ‡πÉ‡∏ä‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏†‡∏≤‡∏û" },
  { title: "Prompt Engineering", duration: "8 ‡∏ä‡∏°.", level: "Intermediate", price: "‡∏ø1,290", desc: "‡∏ù‡∏∂‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏£‡πá‡∏≠‡∏°‡∏û‡πå ‡∏Å‡∏≤‡∏£‡πÑ‡∏•‡πà‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° ‡πÅ‡∏•‡∏∞‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏õ‡∏£‡∏±‡∏ö‡∏à‡∏π‡∏ô‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡∏û‡∏∏‡∏ï" },
  { title: "Python ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI", duration: "12 ‡∏ä‡∏°.", level: "Beginner‚ÄìIntermediate", price: "‡∏ø1,990", desc: "‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô Python, Pandas, ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•" },
];

const settings = {
  logoUrl: "/logo.png",
  lineLink: "https://line.me/ti/g/your-group",
  discordLink: "https://discord.gg/your-invite",
  liveQA: [
    { day: "‡∏û‡∏∏‡∏ò", time: "20:00", tz: "ICT" },
    { day: "‡πÄ‡∏™‡∏≤‡∏£‡πå", time: "10:00", tz: "ICT" },
  ],
};

export default function App() {
  const [presetKey, setPresetKey] = useState("view");
  const [biz, setBiz] = useState("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô AI / Data ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô");
  const [logoUrlState, setLogoUrlState] = useState(settings.logoUrl || "");

  const theme = useMemo(() => presets[presetKey], [presetKey]);
  const gradient = `linear-gradient(135deg, ${theme.primary}, ${theme.secondary})`;

  return (
    <div className="min-h-screen w-full bg-slate-950 text-slate-100">
      <div className="fixed inset-0 -z-10 opacity-20" style={{ background: gradient }} />
      <nav className="sticky top-0 z-20 backdrop-blur border-b border-white/10 bg-slate-950/70">
        <div className="max-w-6xl mx-auto px-4 py-3 flex items-center justify-between">
          <div className="flex items-center gap-2">
            {(logoUrlState || settings.logoUrl) ? (
              <img src={logoUrlState || settings.logoUrl} alt={theme.brand} className="h-7 w-7 rounded-xl object-cover" />
            ) : (<div className="h-7 w-7 rounded-xl" style={{ background: gradient }} />)}
            <span className="font-bold">{theme.brand}</span>
          </div>
          <div className="flex items-center gap-3">
            <select value={presetKey} onChange={(e) => setPresetKey(e.target.value)} className="bg-slate-900/60 border border-white/10 rounded-xl px-3 py-2 text-sm">
              <option value="view">ü•á ‡πÇ‡∏ó‡∏ô‡∏ó‡∏≠‡∏á-‡∏î‡∏≥ (VIEW Studio)</option>
              <option value="default">üé® ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÄ‡∏ó‡∏Ñ/‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå</option>
            </select>
            <a href="#templates" className="text-sm opacity-80 hover:opacity-100">‡∏Ñ‡∏≠‡∏£‡πå‡∏™</a>
            <a href="#roadmap" className="text-sm opacity-80 hover:opacity-100">‡πÇ‡∏£‡∏î‡πÅ‡∏°‡∏õ</a>
            <a href="#schedule" className="text-sm opacity-80 hover:opacity-100">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏î</a>
            <a href="#community" className="text-sm opacity-80 hover:opacity-100">‡∏ä‡∏∏‡∏°‡∏ä‡∏ô</a>
            <a href="#pricing" className="text-sm opacity-80 hover:opacity-100">‡∏£‡∏≤‡∏Ñ‡∏≤</a>
            <a href="#contact" className="text-sm opacity-80 hover:opacity-100">‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</a>
            <input id="logoInput" type="file" accept="image/*" className="hidden" onChange={(e) => {
              const file = e.target.files?.[0]; if (!file) return;
              const reader = new FileReader(); reader.onload = () => setLogoUrlState(String(reader.result || "")); reader.readAsDataURL(file);
            }} />
            <label htmlFor="logoInput" className="text-sm px-3 py-1.5 rounded-xl border border-white/10 hover:bg-white/5 cursor-pointer">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ</label>
          </div>
        </div>
      </nav>

      <header className="max-w-6xl mx-auto px-4 pt-16 pb-10">
        <div className="grid md:grid-cols-2 gap-8 items-center">
          <motion.div initial={{ opacity: 0, y: 12 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6 }}>
            <h1 className="text-4xl md:text-5xl font-black leading-tight">
              ‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô <span className="inline-block px-3 rounded-2xl" style={{ background: theme.lightBg }}>AI ‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô</span>
            </h1>
            <p className="mt-4 text-slate-300">{theme.tagline}</p>
            <div className="mt-6 flex flex-col sm:flex-row gap-3">
              <a href="#templates" className="inline-flex items-center justify-center gap-2 px-5 py-3 rounded-2xl font-semibold" style={{ background: gradient }}>
                <Sparkles className="h-4 w-4" /> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ü‡∏£‡∏µ
              </a>
              <a href="#how" className="inline-flex items-center justify-center gap-2 px-5 py-3 rounded-2xl font-semibold border border-white/10">
                ‡∏î‡∏π‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô <ArrowRight className="h-4 w-4" />
              </a>
            </div>
          </motion.div>
          <motion.div initial={{ opacity: 0, y: 12 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.6, delay: 0.1 }}>
            <div className="rounded-3xl border border-white/10 overflow-hidden shadow-2xl bg-slate-900/50">
              <div className="h-10" style={{ background: gradient }} />
              <div className="p-6 grid gap-4">
                <div className="h-40 rounded-2xl bg-black/30 flex items-center justify-center">
                  <ImageIcon className="h-8 w-8 opacity-60" />
                </div>
                <div className="h-4 w-2/3 bg-white/10 rounded" />
                <div className="h-4 w-1/2 bg-white/10 rounded" />
                <div className="grid grid-cols-3 gap-3">
                  {[1,2,3].map(i => (<div key={i} className="h-24 rounded-xl bg-white/5" />))}
                </div>
              </div>
            </div>
          </motion.div>
        </div>
      </header>

      <section className="max-w-6xl mx-auto px-4 py-12" id="features">
        <h2 className="text-2xl md:text-3xl font-bold mb-6">‡∏Ñ‡∏£‡∏ö‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</h2>
        <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-5">
          {features.map((f, i) => (
            <div key={i} className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
              <div className="flex items-center gap-3">
                <div className="h-10 w-10 rounded-xl flex items-center justify-center bg-white/5" style={{ color: theme.secondary }}>
                  <f.icon className="h-5 w-5" />
                </div>
                <div>
                  <h3 className="font-semibold">{f.title}</h3>
                  <p className="text-sm opacity-80">{f.desc}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="templates">
        <div className="flex items-center justify-between mb-6">
          <h2 className="text-2xl md:text-3xl font-bold">‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏¢‡∏≠‡∏î‡∏ô‡∏¥‡∏¢‡∏°</h2>
          <div className="flex items-center gap-2 text-sm opacity-80">
            <Palette className="h-4 w-4" /> ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏ó‡∏±‡πâ‡∏á‡∏ú‡∏π‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
          </div>
        </div>
        <div className="grid md:grid-cols-3 gap-5">
          {courses.map((c, i) => (
            <div key={i} className="rounded-2xl border border-white/10 overflow-hidden bg-slate-900/40">
              <div className="h-36" style={{ background: gradient }} />
              <div className="p-5">
                <h3 className="font-semibold">{c.title}</h3>
                <p className="text-sm opacity-80">{c.desc}</p>
                <div className="mt-2 text-xs opacity-70">{c.level} ‚Ä¢ {c.duration}</div>
                <div className="mt-1 font-semibold">{c.price}</div>
                <button className="mt-4 px-4 py-2 rounded-xl text-sm border border-white/10 hover:bg-white/5">‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡∏≠‡∏£‡πå‡∏™</button>
              </div>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="roadmap">
        <div className="flex items-center gap-2 mb-6">
          <GraduationCap className="h-5 w-5" />
          <h2 className="text-2xl md:text-3xl font-bold">‡πÇ‡∏£‡∏î‡πÅ‡∏°‡∏õ‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h2>
        </div>
        <div className="grid md:grid-cols-3 gap-5">
          <div className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
            <h3 className="font-semibold">Beginner</h3>
            <ul className="mt-2 text-sm opacity-80 list-disc pl-5 space-y-1">
              <li>AI ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô & ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢</li>
              <li>Prompt ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô</li>
              <li>‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå: ‡πÉ‡∏ä‡πâ AI ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏ô‡πÄ‡∏ó‡∏ô‡∏ï‡πå</li>
            </ul>
          </div>
          <div className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
            <h3 className="font-semibold">Intermediate</h3>
            <ul className="mt-2 text-sm opacity-80 list-disc pl-5 space-y-1">
              <li>Prompt ‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á & Workflow</li>
              <li>Python ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏á‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</li>
              <li>‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå: Automation ‡∏î‡πâ‡∏ß‡∏¢ AI</li>
            </ul>
          </div>
          <div className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
            <h3 className="font-semibold">Advanced</h3>
            <ul className="mt-2 text-sm opacity-80 list-disc pl-5 space-y-1">
              <li>‡∏ó‡∏≥‡πÅ‡∏≠‡∏õ‡πÄ‡∏•‡πá‡∏Å ‡πÜ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ API ‡πÇ‡∏°‡πÄ‡∏î‡∏•</li>
              <li>‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡∏û‡∏∏‡∏ï</li>
              <li>‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå: Mini AI App</li>
            </ul>
          </div>
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="how">
        <h2 className="text-2xl md:text-3xl font-bold mb-6">‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏£</h2>
        <div className="grid md:grid-cols-3 gap-5">
          {steps.map((s) => (
            <div key={s.step} className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
              <div className="text-5xl font-black opacity-20">{s.step}</div>
              <h3 className="mt-2 font-semibold">{s.title}</h3>
              <p className="text-sm opacity-80">{s.desc}</p>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="schedule">
        <div className="flex items-center gap-2 mb-6"><Calendar className="h-5 w-5" /><h2 className="text-2xl md:text-3xl font-bold">‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏î</h2></div>
        <div className="grid md:grid-cols-2 gap-5">
          {settings.liveQA.map((item, i) => (
            <div key={i} className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
              <div className="flex items-center gap-2"><Calendar className="h-5 w-5" /><span className="font-semibold">‡∏ó‡∏∏‡∏Å{item.day}</span></div>
              <div className="mt-2 flex items-center gap-2 text-sm opacity-80"><Clock className="h-4 w-4" /><span>{item.time} {item.tz}</span></div>
              <p className="mt-2 text-sm opacity-80">‡∏ñ‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏™‡∏î ‡∏™‡∏£‡∏∏‡∏õ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÅ‡∏•‡∏∞‡∏£‡∏µ‡∏ß‡∏¥‡∏ß‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå</p>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12">
        <div className="flex items-center gap-2 mb-6"><Star className="h-5 w-5" style={{ color: theme.accent }} /><h2 className="text-2xl md:text-3xl font-bold">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ä‡∏≠‡∏ö‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á</h2></div>
        <div className="grid md:grid-cols-3 gap-5">
          {[{ q: "‡∏™‡∏ß‡∏¢‡πÅ‡∏•‡∏∞‡πÑ‡∏ß‡∏°‡∏≤‡∏Å ‡∏Å‡∏î 3 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÑ‡∏î‡πâ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏•‡∏¢", a: "‚Äî ‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏™‡∏ï‡∏π‡∏î‡∏¥‡πÇ‡∏≠‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û" },
            { q: "‡πÅ‡∏Å‡πâ‡∏™‡∏µ‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå‡∏á‡πà‡∏≤‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ï‡∏∞‡πÇ‡∏Ñ‡πâ‡∏î", a: "‚Äî ‡∏ô‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏•‡∏≤‡∏î‡∏ü‡∏£‡∏µ‡πÅ‡∏•‡∏ô‡∏ã‡πå" },
            { q: "‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡∏î‡∏π‡∏™‡∏ß‡∏¢ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏à‡πâ‡∏≤‡∏á‡∏ó‡∏≥‡πÅ‡∏û‡∏á", a: "‚Äî ‡∏£‡πâ‡∏≤‡∏ô‡∏Ñ‡∏≤‡πÄ‡∏ü‡πà" }].map((t, i) => (
            <div key={i} className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
              <p className="">‚Äú{t.q}‚Äù</p>
              <p className="text-sm opacity-70 mt-2">{t.a}</p>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="community">
        <div className="flex items-center gap-2 mb-6"><Users className="h-5 w-5" /><h2 className="text-2xl md:text-3xl font-bold">‡∏ä‡∏∏‡∏°‡∏ä‡∏ô & ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</h2></div>
        <div className="grid md:grid-cols-2 gap-5">
          <div className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
            <div className="flex items-center gap-3"><MessageCircle className="h-5 w-5" /><div><h3 className="font-semibold">LINE OpenChat</h3><p className="text-sm opacity-80">‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πà‡∏≤‡∏ß‡∏Ñ‡∏≠‡∏£‡πå‡∏™ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏•‡∏ü‡πå</p></div></div>
            <a href={settings.lineLink || "#"} className="mt-4 inline-block px-4 py-2 rounded-xl text-sm border border-white/10 hover:bg-white/5">‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° LINE</a>
          </div>
          <div className="rounded-2xl border border-white/10 p-5 bg-slate-900/40">
            <div className="flex items-center gap-3"><Users className="h-5 w-5" /><div><h3 className="font-semibold">Discord Community</h3><p className="text-sm opacity-80">‡∏Ñ‡∏∏‡∏¢‡∏á‡∏≤‡∏ô ‡πÅ‡∏ä‡∏£‡πå‡∏û‡∏£‡πá‡∏≠‡∏°‡∏û‡πå ‡πÇ‡∏Ñ‡πâ‡∏î</p></div></div>
            <a href={settings.discordLink || "#"} className="mt-4 inline-block px-4 py-2 rounded-xl text-sm border border-white/10 hover:bg-white/5">‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° Discord</a>
          </div>
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-12" id="pricing">
        <h2 className="text-2xl md:text-3xl font-bold mb-6">‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ô</h2>
        <div className="grid md:grid-cols-3 gap-5">
          {plans.map((p, i) => (
            <div key={i} className={`rounded-2xl border p-6 bg-slate-900/40 ${p.highlight ? "border-white/30 shadow-xl" : "border-white/10"}`}>
              <div className="flex items-center justify-between">
                <h3 className="font-semibold">{p.name}</h3>
                {p.highlight && (<span className="text-xs px-2 py-1 rounded-full border border-white/20">‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</span>)}
              </div>
              <div className="text-3xl font-black mt-2">{p.price}</div>
              <ul className="mt-4 space-y-2 text-sm">
                {p.features.map((f, idx) => (
                  <li key={idx} className="flex items-start gap-2">
                    <Check className="h-4 w-4 mt-0.5" style={{ color: theme.accent }} />
                    <span>{f}</span>
                  </li>
                ))}
              </ul>
              <button className="mt-5 w-full px-4 py-2 rounded-xl font-medium border border-white/10 hover:bg-white/5">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</button>
            </div>
          ))}
        </div>
      </section>

      <section className="max-w-6xl mx-auto px-4 py-14">
        <div className="rounded-3xl p-8 border border-white/10 bg-slate-900/60">
          <h3 className="text-2xl md:text-3xl font-bold">‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á?</h3>
          <p className="opacity-80 mt-1">‡∏ö‡∏≠‡∏Å‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏±‡∏ö‡πÅ‡∏ú‡∏ô‡∏£‡∏≤‡∏¢‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå</p>
          <div className="mt-4 flex flex-col sm:flex-row gap-3">
            <a href="#" className="inline-flex items-center justify-center gap-2 px-5 py-3 rounded-2xl font-semibold" style={{ background: gradient }}>
              ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ü‡∏£‡∏µ
            </a>
            <a href="#contact" className="inline-flex items-center justify-center gap-2 px-5 py-3 rounded-2xl font-semibold border border-white/10">
              ‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏≠‡∏≤‡∏ä‡∏µ‡∏û
            </a>
          </div>
        </div>
      </section>

      <footer id="contact" className="border-t border-white/10">
        <div className="max-w-6xl mx-auto px-4 py-10 grid md:grid-cols-2 gap-6 items-center">
          <div>
            <div className="flex items-center gap-2">
              {(logoUrlState || settings.logoUrl) ? (<img src={logoUrlState || settings.logoUrl} alt={theme.brand} className="h-7 w-7 rounded-xl object-cover" />) : (<div className="h-7 w-7 rounded-xl" style={{ background: gradient }} />)}
              <span className="font-bold">{theme.brand}</span>
            </div>
            <p className="text-sm opacity-70 mt-2">¬© {new Date().getFullYear()} {theme.brand}. All rights reserved.</p>
          </div>
          <form className="grid sm:grid-cols-3 gap-3">
            <input className="bg-black/30 border border-white/10 rounded-xl px-3 py-2 text-sm" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì" />
            <input className="bg-black/30 border border-white/10 rounded-xl px-3 py-2 text-sm" placeholder="‡∏≠‡∏µ‡πÄ‡∏°‡∏•" />
            <button className="px-4 py-2 rounded-xl font-medium" style={{ background: gradient }}>‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°</button>
          </form>
        </div>
      </footer>
    </div>
  );
}
